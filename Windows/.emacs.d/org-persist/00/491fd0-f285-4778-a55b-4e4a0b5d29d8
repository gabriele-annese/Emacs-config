(((elisp org-element--headline-cache) . #s(avl-tree- [[[[[nil nil #15=(headline (:raw-value #1="Startup" :begin 97 :end 500 :pre-blank 1 :contents-begin 108 :contents-end 499 :robust-begin 110 :robust-end 497 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 97 :title #1# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #3=(org-data (:begin 1 :contents-begin 1 :contents-end 5805 :end 5805 :robust-begin 3 :robust-end 5803 :post-blank 0 :post-affiliated 1 :path "c:/gabri/.emacs.d/dotemacs.org" :mode org-data :CATEGORY "dotemacs" :parent nil :cached t :org-element--cache-sync-key nil)))) 0] nil #5=(headline (:raw-value #2="Packages" :begin 500 :end 2534 :pre-blank 1 :contents-begin 512 :contents-end 2533 :robust-begin 514 :robust-end 2531 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 500 :title #2# :parent #3# :cached t :org-element--cache-sync-key nil :granularity element)) -1] [[nil nil #20=(headline (:raw-value #4="Company" :begin 1526 :end 1908 :pre-blank 0 :contents-begin 1537 :contents-end 1907 :robust-begin 1539 :robust-end 1905 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1526 :title #4# :mode nil :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 0] [nil [nil nil #25=(headline (:raw-value #6="Misc" :begin 2341 :end 2534 :pre-blank 0 :contents-begin 2349 :contents-end 2533 :robust-begin 2351 :robust-end 2531 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2341 :title #6# :mode nil :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 0] #23=(headline (:raw-value #7="Window" :begin 2228 :end 2341 :pre-blank 0 :contents-begin 2238 :contents-end 2340 :robust-begin 2240 :robust-end 2338 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2228 :title #7# :mode nil :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 1] #21=(headline (:raw-value #8="Ivy" :begin 1908 :end 2228 :pre-blank 1 :contents-begin 1916 :contents-end 2227 :robust-begin 1918 :robust-end 2225 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1908 :title #8# :mode nil :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 1] #18=(headline (:raw-value #9="Themes" :begin 987 :end 1526 :pre-blank 1 :contents-begin 998 :contents-end 1525 :robust-begin 1000 :robust-end 1523 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 987 :title #9# :mode nil :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 1] [[nil nil #29=(headline (:raw-value #10="File Exts" :begin 3289 :end 4419 :pre-blank 0 :contents-begin 3301 :contents-end 4418 :robust-begin 3303 :robust-end 4416 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3289 :title #10# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #3#)) 0] [nil [nil nil #34=(headline (:raw-value #11="Hooks" :begin 5713 :end 5805 :pre-blank 0 :contents-begin 5721 :contents-end 5805 :robust-begin 5723 :robust-end 5803 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 5713 :title #11# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #32=(headline (:raw-value #12="My Functions" :begin 5367 :end 5713 :pre-blank 1 :contents-begin 5383 :contents-end 5712 :robust-begin 5385 :robust-end 5710 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 5367 :title #12# :parent #3# :cached t :org-element--cache-sync-key nil :granularity element)) 1] #31=(headline (:raw-value #13="Colored Texts" :begin 4419 :end 5367 :pre-blank 0 :contents-begin 4435 :contents-end 5366 :robust-begin 4437 :robust-end 5364 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4419 :title #13# :parent #3# :cached t :org-element--cache-sync-key nil :granularity element)) 1] #27=(headline (:raw-value #14="General" :begin 2534 :end 3289 :pre-blank 0 :contents-begin 2544 :contents-end 3288 :robust-begin 2546 :robust-end 3286 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2534 :title #14# :mode nil :granularity element :org-element--cache-sync-key nil :cached t :parent #3#)) -1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[[[nil nil #3# 0] [nil nil #15# 0] (section (:begin 1 :end 97 :contents-begin 1 :contents-end 96 :robust-begin 1 :robust-end 94 :post-blank 1 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 273 :end 500 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (add-to-list 'load-path\12\11    (concat os-packages-path \"use-package/\"))\12\12  ;; per spacemacs theme\12  (add-to-list 'load-path \"C:\\\\gabri\\\\.emacs.d\\\\emacs_themes\\\\spacemacs-theme-20230530.1751\")\12" :post-blank 1 :post-affiliated 273 :mode nil :granularity element :cached t :parent #16=(section (:begin 108 :end 500 :contents-begin 108 :contents-end 499 :robust-begin 108 :robust-end 497 :post-blank 1 :post-affiliated 108 :mode section :granularity element :cached t :parent #15# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 108 :end 273 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (setq os-packages-path \"C:\\\\gabri\\\\.emacs.d\\\\emacs_packages\")\12  (setq vc-follow-symlinks t)\12  (prefer-coding-system 'utf-8-unix)\12" :post-blank 1 :post-affiliated 108 :mode planning :granularity element :cached t :parent #16# :org-element--cache-sync-key nil)) 1] #16# 0] [[[nil nil #17=(section (:begin 512 :end 987 :contents-begin 512 :contents-end 986 :robust-begin 512 :robust-end 984 :post-blank 1 :post-affiliated 512 :mode section :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 594 :end 987 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (use-package package\12\11:config\12\11(setq package-archive-priorities\12\11      '((\"melpa-stable\" .2)\12\11\11(\"MELPA\" .1)\12\11\11(\"gnu\" .0)))\12\11(setq package-archives\12\11      '((\"melpa-stable\" . \"https://stable.melpa.org/packages/\")\12\11\11(\"MELPA\" . \"https://melpa.org/packages/\")\12\11\11(\"gnu\" . \"http://elpa.gnu.org/packages/\")\12\11\11(\"gnu-devel\" . \"https://elpa.gnu.org/devel/\")))\12\11)\12" :post-blank 1 :post-affiliated 594 :mode nil :granularity element :cached t :parent #17# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 512 :end 594 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (package-initialize)\12  (require 'use-package)\12" :post-blank 1 :post-affiliated 512 :mode planning :granularity element :cached t :parent #17# :org-element--cache-sync-key nil)) 0] [[nil nil #19=(section (:begin 998 :end 1526 :contents-begin 998 :contents-end 1525 :robust-begin 998 :robust-end 1523 :post-blank 1 :post-affiliated 998 :mode section :granularity element :cached t :parent #18# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1173 :end 1526 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package org-bullets\12    :ensure t\12    :hook\12    (org-mode . org-bullets-mode)\12\12    :config\12    (setq org-bullets-face-name (quote org-bullets-face))\12    (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))\12\12    (setq org-bullets-bullet-list '(\"✙\" \"✞\" \"✟\" \"✝\" \"†\" \"✠\" \"✚\" \"✜\" \"✛\" \"✢\" \"✣\" \"✤\" \"✥\"))\12   )\11   \12" :post-blank 1 :post-affiliated 1173 :mode nil :granularity element :cached t :parent #19# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 998 :end 1173 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (add-to-list 'custom-theme-load-path  \"C:\\\\gabri\\\\.emacs.d\\\\emacs_themes\\\\spacemacs-theme-20230530.1751\")\12  (load-theme 'spacemacs-dark t)\12" :post-blank 1 :post-affiliated 998 :mode planning :granularity element :cached t :parent #19# :org-element--cache-sync-key nil)) 0] #18# 0] #5# 0] [[[nil nil #22=(section (:begin 1537 :end 1908 :contents-begin 1537 :contents-end 1907 :robust-begin 1537 :robust-end 1905 :post-blank 1 :post-affiliated 1537 :mode section :granularity element :cached t :parent #20# :org-element--cache-sync-key nil)) 0] [nil nil #21# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1537 :end 1908 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package company\12  :ensure t\12  :defer t\12  :config\12  (setq company-idle-delay 0)\12  (setq company-minimum-prefix-lenght 3)\12  (setq company-selection-wrap-around t)\12  (company-tng-configure-default)\12  (setq company-quickhelp-color-background \"#4F4F4F\")\12  (setq company-quickhelp-colo-foreground \"#DCDCCC\")\12\12  (global-company-mode 1))\12" :post-blank 1 :post-affiliated 1537 :mode planning :granularity element :cached t :parent #22# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1916 :end 2107 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package ivy\12  :ensure t\12  :config\12  (ivy-mode 1)\12  (setq ivy-re-builders-alist\12\11  '((swiper . ivy--regex-plus)\12\11    (t      . ivy--regex-fuzzy)))\12 )\12" :post-blank 2 :post-affiliated 1916 :mode planning :granularity element :cached t :parent #24=(section (:begin 1916 :end 2228 :contents-begin 1916 :contents-end 2227 :robust-begin 1916 :robust-end 2225 :post-blank 1 :post-affiliated 1916 :mode section :granularity element :cached t :parent #21# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #23# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2107 :end 2228 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value " (use-package swiper\12    :ensure t\12    :config\12    (global-set-key \"\\C-s\" 'swiper)\12  )\12" :post-blank 1 :post-affiliated 2107 :mode nil :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] #24# 0] #20# -1] [[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2238 :end 2341 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package beacon\12    :ensure t\12    :config\12    (beacon-mode 1))\12" :post-blank 1 :post-affiliated 2238 :mode planning :granularity element :cached t :parent #37=(section (:begin 2238 :end 2341 :contents-begin 2238 :contents-end 2340 :robust-begin 2238 :robust-end 2338 :post-blank 1 :post-affiliated 2238 :mode section :granularity element :cached t :parent #23# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #26=(section (:begin 2349 :end 2534 :contents-begin 2349 :contents-end 2533 :robust-begin 2349 :robust-end 2531 :post-blank 1 :post-affiliated 2349 :mode section :granularity element :cached t :parent #25# :org-element--cache-sync-key nil)) 0] #25# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2427 :end 2534 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package nyan-mode\12    :ensure t\12    :config\12    (nyan-mode)\12    )\12" :post-blank 1 :post-affiliated 2427 :mode nil :granularity element :cached t :parent #26# :org-element--cache-sync-key nil)) 0] [[nil nil #28=(section (:begin 2544 :end 3289 :contents-begin 2544 :contents-end 3288 :robust-begin 2544 :robust-end 3286 :post-blank 1 :post-affiliated 2544 :mode section :granularity element :cached t :parent #27# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2667 :end 3289 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defalias 'yes-or-no-p 'y-or-n-p)\12\12  ;; Set global value for paragraph width\12  (setq-default fill-column 70)\12\12  ;; Stop emacs from losing informations.\12  (setq undo-limit 20000000)\12  (setq undo-strong-limit 40000000)\12\12  ;; Smooth scroll\12  (setq scroll-step 3)\12  (setq line-number-mode t)\12  (setq inhibit-startup-screen t)\12  (setq ring-bell-function (quote ignore))\12\12  ;; Display Clock \12  (display-time)\12  (scroll-bar-mode -1)\12  (menu-bar-mode -1)\12\12  ;; Turn off the toolbar\12  (tool-bar-mode 0)\12\12  ;; add column number in the main bar\12  (column-number-mode)\12\12  (global-visual-line-mode)\12" :post-blank 1 :post-affiliated 2667 :mode nil :granularity element :cached t :parent #28# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2544 :end 2667 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; Simple type 'y' for 'yes' and 'n' for 'no'.\12  (defalias 'yes-or-no-p\12    'y-or-n-p)\12" :post-blank 1 :post-affiliated 2544 :mode planning :granularity element :cached t :parent #28# :org-element--cache-sync-key nil)) 0] #27# 1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2349 :end 2427 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package all-the-icons\12    :ensure t)\12" :post-blank 1 :post-affiliated 2349 :mode planning :granularity element :cached t :parent #26# :org-element--cache-sync-key nil)) 1] [[[[nil nil #30=(section (:begin 3301 :end 4419 :contents-begin 3301 :contents-end 4418 :robust-begin 3301 :robust-end 4416 :post-blank 1 :post-affiliated 3301 :mode section :granularity element :cached t :parent #29# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 3972 :end 4419 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "   (setq auto-mode-alist\12\11  (append\12\11   '((\".offlineimaprc\"   . conf-mode)\12\11     (\".moc.conf\"        . conf-mode)\12\11     (\"github_blog.prf\"  . conf-mode)\12\11     (\"knwl_org.prf\"     . conf-mode)\12\11     (\"public_org.prf\"   . conf-mode)\12\11     (\"i3config\"         . conf-mode)\12\11     (\".i3blocks.conf\"   . conf-mode)\12\11     (\".compton.conf\"    . conf-mode)\12\11     (\".gitconfig\"       . conf-mode)\12\11     ) auto-mode-alist))\12" :post-blank 1 :post-affiliated 3972 :mode nil :granularity element :cached t :parent #30# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 3301 :end 3972 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "   (setq auto-mode-alist\12\11  (append\12\11   '((\"\\\\.cpp$\"    . c++-mode)\12\11     (\"\\\\.hin$\"    . c++-mode)\12\11     (\"\\\\.cin$\"    . c++-mode)\12\11     (\"\\\\.inl$\"    . c++-mode)\12\11     (\"\\\\.rdc$\"    . c++-mode)\12\11     (\"\\\\.h$\"      . c++-mode)\12\11     (\"\\\\.c$\"      . c++-mode)\12\11     (\"\\\\.cc$\"     . c++-mode)\12\11     (\"\\\\.c8$\"     . c++-mode)\12\11     (\"\\\\.txt$\"    . indented-text-mode)\12\11     (\"\\\\.emacs$\"  . emacs-lisp-mode)\12\11     (\"\\\\.gen$\"    . gen-mode)\12\11     (\"\\\\.ms$\"     . fundamental-mode)\12\11     (\"\\\\.m$\"      . objc-mode)\12\11     (\"\\\\.mm$\"     . objc-mode)\12\11     (\"\\\\.asm$\"    . asm86-mode)\12\11     (\"\\\\.inc$\"    . asm86-mode)\12\11     ) auto-mode-alist))\12" :post-blank 1 :post-affiliated 3301 :mode planning :granularity element :cached t :parent #30# :org-element--cache-sync-key nil)) 0] [nil nil #36=(section (:begin 4435 :end 5367 :contents-begin 4435 :contents-end 5366 :robust-begin 4435 :robust-end 5364 :post-blank 1 :post-affiliated 4435 :mode section :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] #31# -1] [[[nil nil #32# 0] [nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 5462 :end 5713 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defun my/tangle-dotfiles()\12     (interactive)\12    (when (equal (buffer-file-name)\12\11\11 (expand-file-name \"C:\\\\gabri\\\\.emacs.d\\\\dotemacs.org\"))\12      (org-babel-tangle)\12      (message \"Dotfile tangle\")\11       \12    ))\12" :post-blank 1 :post-affiliated 5462 :mode nil :granularity element :cached t :parent #33=(section (:begin 5383 :end 5713 :contents-begin 5383 :contents-end 5712 :robust-begin 5383 :robust-end 5710 :post-blank 1 :post-affiliated 5383 :mode section :granularity element :cached t :parent #32# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] (paragraph (:begin 5383 :end 5462 :contents-begin 5383 :contents-end 5461 :post-blank 1 :post-affiliated 5383 :mode planning :granularity element :cached t :parent #33# :org-element--cache-sync-key nil)) 1] #33# 1] [nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 5721 :end 5805 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (add-hook 'after-save-hook #'my/tangle-dotfiles)\12" :post-blank 0 :post-affiliated 5721 :mode planning :granularity element :cached t :parent #35=(section (:begin 5721 :end 5805 :contents-begin 5721 :contents-end 5805 :robust-begin 5721 :robust-end 5803 :post-blank 0 :post-affiliated 5721 :mode section :granularity element :cached t :parent #34# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #35# 1] #34# -1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 4435 :end 5367 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value " ;; -------------------------------\12 ;; Colored text\12 ;; -------------------------------\12 (setq fixme-modes '(c++-mode c-mode emacs-lisp-mode latex-mode scheme-mode python-mode))\12 (make-face 'font-lock-fixme-face)\12 (make-face 'font-lock-note-face)\12 (make-face 'font-lock-important-face)\12 (make-face 'font-lock-debug-face)\12\12 (mapc (lambda (mode)\12\11     (font-lock-add-keywords\12\11      mode\12\11      '((\"\\\\<\\\\(TODO\\\\)\" 1 'font-lock-fixme-face t)\12\11\11(\"\\\\<\\\\(DEBUG\\\\)\" 1 'font-lock-debug-face t)\12\11\11(\"\\\\<\\\\(IMPORTANT\\\\)\" 1 'font-lock-important-face t)\12\11\11(\"\\\\<\\\\(NOTE\\\\)\" 1 'font-lock-note-face t))))\12\11   fixme-modes)\12\12 (modify-face 'font-lock-fixme-face \"Magenta\" nil nil t nil t nil nil)\12 (modify-face 'font-lock-debug-face \"DarkOrange\" nil nil t nil t nil nil)\12 (modify-face 'font-lock-important-face \"Red\" nil nil t nil t nil nil)\12 (modify-face 'font-lock-note-face \"DeepSkyBlue\" nil nil t nil t nil nil)\12" :post-blank 1 :post-affiliated 4435 :mode planning :granularity element :cached t :parent #36# :org-element--cache-sync-key nil)) 1] #29# 1] #37# 1] nil nil 0] org-element--cache-compare)))